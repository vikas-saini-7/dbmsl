CREATE TABLE Stud (
    Roll NUMBER PRIMARY KEY, 
    Att NUMBER(3, 1),             
    Status VARCHAR2(2)            
);

INSERT INTO Stud (Roll, Att, Status) VALUES (101, 80, NULL);
INSERT INTO Stud (Roll, Att, Status) VALUES (102, 65, NULL);
INSERT INTO Stud (Roll, Att, Status) VALUES (103, 90, NULL);
INSERT INTO Stud (Roll, Att, Status) VALUES (104, 70, NULL);
INSERT INTO Stud (Roll, Att, Status) VALUES (105, 85, NULL);

COMMIT;

SET SERVEROUTPUT ON;

--PL/SQL

DECLARE
    v_rollno NUMBER;        -- Variable to store roll number entered by the user
    v_attendance NUMBER;    -- Variable to store attendance of the student
BEGIN
    -- Prompting the user to input the roll number
    v_rollno := &Roll;

    -- Fetch the attendance of the student based on the entered roll number
    SELECT Att INTO v_attendance
    FROM Stud
    WHERE Roll = v_rollno;

    -- Check if attendance is less than 75%
    IF v_attendance < 75 THEN
        DBMS_OUTPUT.PUT_LINE('Term not granted');
        -- Update the status to "D" for denied
        UPDATE Stud
        SET Status = 'D'
        WHERE Roll = v_rollno;
    ELSE
        DBMS_OUTPUT.PUT_LINE('Term granted');
        -- Update the status to "ND" for not denied
        UPDATE Stud
        SET Status = 'ND'
        WHERE Roll = v_rollno;
    END IF;

    -- Commit changes to the database
    COMMIT;

EXCEPTION
    -- Handle case where the roll number does not exist in the table
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('Roll number not found in the table.');
    -- Handle any other unexpected error
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('An error occurred: ' || SQLERRM);
END;
/