Practical 8-8. Consider the following database
Employee(emp_no,name,skill,pay-rate) eno primary key
Position(posting_no,skill) posting_no primary key
Duty_allocation(posting_no,emp_no,day,shift)
Find the SQL queries for the following:
1. Get the duty allocation details for emp_no 123461 for the month of April 1986.
2. Find the shift details for Employee ‘xyz’
3. Get employees whose rate of pay is more than or equal to the rate of pay of employee ‘xyz’
4. Get the names and pay rates of employees with emp_no less than 123460 whose rate of pay is more than the rate of pay of at least one employee with emp_no greater than or equal to 123460.
5. Find the names of employees who are assigned to all positions that require a Chef’s skill
6 .Find the employees with the lowest pay rate
7 .Get the employee numbers of all employees working on at least two dates.
8 .Get a list of names of employees with the skill of Chef who are assigned a duty
9 .Get a list of employees not assigned a duty
10.Get a count of different employees on each shift

C:\Users\ACER>mysql -u root -p
Enter password: ***************

mysql> CREATE DATABASE CompanyDatabase;
ERROR 1007 (HY000): Can't create database 'companydatabase'; database exists
mysql> CREATE DATABASE CompanyDatabase1;
Query OK, 1 row affected (0.01 sec)

mysql> USE CompanyDatabase1;
Database changed
mysql> CREATE TABLE Employee (
       emp_no INT PRIMARY KEY,
       name VARCHAR(50),
       skill VARCHAR(50),
        pay_rate DECIMAL(10, 2)
     );
Query OK, 0 rows affected (0.03 sec)

mysql> CREATE TABLE Position (
        posting_no INT PRIMARY KEY,
        skill VARCHAR(50)
    );
Query OK, 0 rows affected (0.02 sec)

mysql> CREATE TABLE Duty_allocation (
        posting_no INT,
        emp_no INT,
       day DATE,
       shift VARCHAR(10),
       PRIMARY KEY (posting_no, emp_no, day));
Query OK, 0 rows affected (0.02 sec)

mysql> INSERT INTO Employee (emp_no, name, skill, pay_rate) VALUES
    (123456, 'John Doe', 'Chef', 20.00),
    (123457, 'Jane Smith', 'Waiter', 15.00),
    (123458, 'xyz', 'Chef', 25.00),
    (123459, 'Alice Brown', 'Bartender', 22.00),
    (123461, 'Bob White', 'Chef', 30.00);
Query OK, 5 rows affected (0.01 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> INSERT INTO Position (posting_no, skill) VALUES
     (101, 'Chef'),
    (102, 'Bartender'),
    (103, 'Waiter');
Query OK, 3 rows affected (0.01 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> INSERT INTO Duty_allocation (posting_no, emp_no, day, shift) VALUES
    (101, 123456, '1986-04-01', 'Morning'),
    (101, 123461, '1986-04-05', 'Evening'),
    (103, 123458, '1986-04-10', 'Night'),
     (102, 123459, '1986-04-15', 'Morning'),
    (101, 123461, '1986-04-20', 'Evening');
Query OK, 5 rows affected (0.01 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> SELECT *
     FROM Duty_allocation
    WHERE emp_no = 123461
     AND MONTH(day) = 4
     AND YEAR(day) = 1986;
+------------+--------+------------+---------+
| posting_no | emp_no | day        | shift   |
+------------+--------+------------+---------+
|        101 | 123461 | 1986-04-05 | Evening |
|        101 | 123461 | 1986-04-20 | Evening |
+------------+--------+------------+---------+
2 rows in set (0.01 sec)

mysql> ^C
mysql> SELECT da.shift, da.day
    FROM Duty_allocation AS da
    JOIN Employee AS e ON da.emp_no = e.emp_no
    WHERE e.name = 'xyz';
+-------+------------+
| shift | day        |
+-------+------------+
| Night | 1986-04-10 |
+-------+------------+
1 row in set (0.00 sec)

mysql> SELECT *
    FROM Employee
    WHERE pay_rate >= (SELECT pay_rate FROM Employee WHERE name = 'xyz');
+--------+-----------+-------+----------+
| emp_no | name      | skill | pay_rate |
+--------+-----------+-------+----------+
| 123458 | xyz       | Chef  |    25.00 |
| 123461 | Bob White | Chef  |    30.00 |
+--------+-----------+-------+----------+
2 rows in set (0.01 sec)

mysql> SELECT e1.name, e1.pay_rate
     FROM Employee AS e1
    WHERE e1.emp_no < 123460
    AND e1.pay_rate > (SELECT MIN(e2.pay_rate)
                       FROM Employee AS e2
                        WHERE e2.emp_no >= 123460);
Empty set (0.01 sec)

mysql> SELECT e.name
    FROM Employee AS e
    JOIN Duty_allocation AS da ON e.emp_no = da.emp_no
    JOIN Position AS p ON da.posting_no = p.posting_no
    WHERE p.skill = 'Chef'
   GROUP BY e.emp_no, e.name
     HAVING COUNT(DISTINCT da.posting_no) = (SELECT COUNT(*) FROM Position WHERE skill = 'Chef');
+-----------+
| name      |
+-----------+
| John Doe  |
| Bob White |
+-----------+
2 rows in set (0.01 sec)

mysql> SELECT *
     FROM Employee
     WHERE pay_rate = (SELECT MIN(pay_rate) FROM Employee);
+--------+------------+--------+----------+
| emp_no | name       | skill  | pay_rate |
+--------+------------+--------+----------+
| 123457 | Jane Smith | Waiter |    15.00 |
+--------+------------+--------+----------+
1 row in set (0.00 sec)

mysql> SELECT emp_no
     FROM Duty_allocation
     GROUP BY emp_no
     HAVING COUNT(DISTINCT day) >= 2;
+--------+
| emp_no |
+--------+
| 123461 |
+--------+
1 row in set (0.00 sec)

mysql> SELECT DISTINCT e.name
     FROM Employee AS e
     JOIN Duty_allocation AS da ON e.emp_no = da.emp_no
     WHERE e.skill = 'Chef';
+-----------+
| name      |
+-----------+
| John Doe  |
| Bob White |
| xyz       |
+-----------+
3 rows in set (0.01 sec)

mysql> SELECT name
     FROM Employee
     WHERE emp_no NOT IN (SELECT emp_no FROM Duty_allocation);
+------------+
| name       |
+------------+
| Jane Smith |
+------------+
1 row in set (0.01 sec)

mysql> SELECT shift, COUNT(DISTINCT emp_no) AS employee_count
     FROM Duty_allocation
     GROUP BY shift;
+---------+----------------+
| shift   | employee_count |
+---------+----------------+
| Evening |              1 |
| Morning |              2 |
| Night   |              1 |
+---------+----------------+
3 rows in set (0.00 sec)