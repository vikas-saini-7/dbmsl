CREATE TABLE Borrow (
    Roll_no NUMBER PRIMARY KEY,
    Name VARCHAR2(100),
    DateofIssue DATE,
    NameofBook VARCHAR2(100),
    Status VARCHAR2(1) -- 'I' for Issued, 'R' for Returned
);

CREATE TABLE Fine (
    Roll_no NUMBER,
    Dates DATE,
    Amt NUMBER(10, 2),
    PRIMARY KEY (Roll_no, Date)
);

INSERT INTO Borrow (Roll_no, Name, DateofIssue, NameofBook, Status) 
VALUES (101, 'John Doe', TO_DATE('2024-10-01', 'YYYY-MM-DD'), 'The Great Gatsby', 'I');
INSERT INTO Borrow (Roll_no, Name, DateofIssue, NameofBook, Status) 
VALUES (102, 'Jane Smith', TO_DATE('2024-09-15', 'YYYY-MM-DD'), 'Moby Dick', 'I');
INSERT INTO Borrow (Roll_no, Name, DateofIssue, NameofBook, Status) 
VALUES (103, 'Michael Brown', TO_DATE('2024-08-01', 'YYYY-MM-DD'), 'War and Peace', 'I');

COMMIT;

SET SERVEROUTPUT ON;

DECLARE
    -- Declare variables for roll number, book name, number of days, fine, etc.
    v_roll_no NUMBER := &roll_no;  -- Roll number of the student
    v_book_name VARCHAR2(100) := '&book_name';  -- Name of the book entered by user
    v_date_of_issue DATE;
    v_current_date DATE := SYSDATE;
    v_no_of_days NUMBER;
    v_fine_amount NUMBER := 0;
    v_status VARCHAR2(1);
BEGIN
    -- Fetch the date of issue and status from the Borrow table for the given roll number and book
    SELECT DateofIssue, Status INTO v_date_of_issue, v_status
    FROM Borrow
    WHERE Roll_no = v_roll_no AND NameofBook = v_book_name;

    -- Calculate the number of days between the current date and the date of issue
    v_no_of_days := v_current_date - v_date_of_issue;

    -- Determine the fine based on the number of days
    IF v_no_of_days BETWEEN 15 AND 30 THEN
        v_fine_amount := v_no_of_days * 5;  -- Rs. 5 per day if days are between 15 and 30
    ELSIF v_no_of_days > 30 THEN
        v_fine_amount := v_no_of_days * 50; -- Rs. 50 per day if days are greater than 30
    ELSE
        v_fine_amount := v_no_of_days * 5;  -- Rs. 5 per day if days are less than 15
    END IF;

    -- Update the status of the book to 'R' (Returned) after submitting
    UPDATE Borrow
    SET Status = 'R'
    WHERE Roll_no = v_roll_no AND NameofBook = v_book_name;

    -- If fine is calculated, insert the fine details into the Fine table
    IF v_fine_amount > 0 THEN
        INSERT INTO Fine (Roll_no, Dates, Amt)  -- Updated column name to Dates
        VALUES (v_roll_no, v_current_date, v_fine_amount);
    END IF;

    COMMIT;

    -- Output the fine details
    DBMS_OUTPUT.PUT_LINE('Fine Amount for Book: ' || v_book_name || ' is Rs. ' || v_fine_amount);
EXCEPTION
    -- Handle case where no borrow record is found for the given roll number and book name
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('Error: No borrow record found for this roll number and book.');
    -- Handle any other unexpected error
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('An error occurred: ' || SQLERRM);
END;
/
