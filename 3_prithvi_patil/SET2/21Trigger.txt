create database a;
use a;

CREATE TABLE Employee (
    emp_id INT PRIMARY KEY,
    emp_name VARCHAR(100),
    salary DECIMAL(10, 2),
    designation VARCHAR(50)
);

CREATE TABLE Salary_Backup (
    emp_id INT,
    old_salary DECIMAL(10, 2),
    new_salary DECIMAL(10, 2),
    salary_difference DECIMAL(10, 2),
    FOREIGN KEY (emp_id) REFERENCES Employee(emp_id)
);

-- Insert sample employees
INSERT INTO Employee (emp_id, emp_name, salary, designation)
VALUES 
(1, 'Alice', 50000.00, 'Manager'),
(2, 'Bob', 120000.00, 'CEO'),
(3, 'Charlie', 70000.00, 'Developer');

-- 1
DELIMITER $$

CREATE TRIGGER record_salary_change
AFTER UPDATE ON Employee
FOR EACH ROW
BEGIN
    -- Only proceed if the salary has been changed
    IF OLD.salary <> NEW.salary THEN
        INSERT INTO Salary_Backup (emp_id, old_salary, new_salary, salary_difference)
        VALUES (NEW.emp_id, OLD.salary, NEW.salary, NEW.salary - OLD.salary);
    END IF;
END$$

DELIMITER ;

-- 2
DELIMITER $$

CREATE TRIGGER prevent_ceo_deletion
BEFORE DELETE ON Employee
FOR EACH ROW
BEGIN
    -- Check if the employee's designation is 'CEO'
    IF OLD.designation = 'CEO' THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Cannot delete record for employee with designation CEO';
    END IF;
END$$

DELIMITER ;



-- Update salary for Alice
UPDATE Employee
SET salary = 55000
WHERE emp_id = 1;

-- Check the Salary_Backup table for the recorded change
SELECT * FROM Salary_Backup;

-- Attempt to delete Bob (CEO)
DELETE FROM Employee
WHERE emp_id = 2;
